[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
authors = []
license = { text = "MIT" }
requires-python = ">=3.10.0,<4.0.0"
dependencies = [
    "langchain-core>=1.0.0,<2.0.0",
    "langgraph>=1.0.0,<1.1.0",
    "pydantic>=2.7.4,<3.0.0",
]

name = "langchain"
version = "1.0.2"
description = "Building applications with LLMs through composability"
readme = "README.md"

[project.optional-dependencies]
community = ["langchain-community"]
anthropic = ["langchain-anthropic"]
openai = ["langchain-openai"]
#azure-ai = ["langchain-azure-ai"]
#cohere = ["langchain-cohere"]
google-vertexai = ["langchain-google-vertexai"]
google-genai = ["langchain-google-genai"]
fireworks = ["langchain-fireworks"]
ollama = ["langchain-ollama"]
together = ["langchain-together"]
mistralai = ["langchain-mistralai"]
huggingface = ["langchain-huggingface"]
groq = ["langchain-groq"]
aws = ["langchain-aws"]
deepseek = ["langchain-deepseek"]
xai = ["langchain-xai"]
perplexity = ["langchain-perplexity"]

[project.urls]
Homepage = "https://docs.langchain.com/"
Documentation = "https://reference.langchain.com/python/langchain/langchain/"
Source = "https://github.com/langchain-ai/langchain/tree/master/libs/langchain"
Changelog = "https://github.com/langchain-ai/langchain/releases?q=tag%3A%22langchain%3D%3D1%22"
Twitter = "https://x.com/LangChainAI"
Slack = "https://www.langchain.com/join-community"
Reddit = "https://www.reddit.com/r/LangChain/"

[dependency-groups]
test = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<8.0.0",
    "pytest-watcher>=0.2.6,<1.0.0",
    "pytest-asyncio>=0.23.2,<2.0.0",
    "pytest-socket>=0.6.0,<1.0.0",
    "pytest-xdist<4.0.0,>=3.6.1",
    "pytest-mock",
    "syrupy>=4.0.2,<5.0.0",
    "toml>=0.10.2,<1.0.0",
    "langchain-tests",
    "langchain-openai",
]
lint = [
    "ruff>=0.14.2,<0.15.0",
]
typing = [
    "mypy>=1.18.1,<1.19.0",
    "types-toml>=0.10.8.20240310,<1.0.0.0",
]

test_integration = [
    "vcrpy>=7.0.0,<8.0.0",
    "wrapt>=1.15.0,<2.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "langchainhub>=0.1.16,<1.0.0",
    "langchain-core",
    "langchain-text-splitters",
]

[tool.uv]
prerelease = "allow"

[tool.uv.sources]
langchain-core = { path = "../core", editable = true }
langchain-tests = { path = "../standard-tests", editable = true }
langchain-text-splitters = { path = "../text-splitters", editable = true }
langchain-openai = { path = "../partners/openai", editable = true }

[tool.ruff]
line-length = 100

[tool.mypy]
strict = true
ignore_missing_imports = true
enable_error_code = "deprecated"
exclude = ["tests/unit_tests/agents/*", "tests/integration_tests/agents/*"]

# TODO: activate for 'strict' checking
disallow_any_generics = false
warn_return_any = false

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    "C90",     # McCabe complexity
    "COM812",  # Messes with the formatter
    "CPY",     # No copyright
    "FIX002",  # Line contains TODO
    "ISC001",  # Messes with the formatter
    "PERF203", # Rarely useful
    "PLR09",   # Too many something (arg, statements, etc)
    "RUF012",  # Doesn't play well with Pydantic
    "TC001",   # Doesn't play well with Pydantic
    "TC002",   # Doesn't play well with Pydantic
    "TC003",   # Doesn't play well with Pydantic
    "TD002",   # Missing author in TODO
    "TD003",   # Missing issue link in TODO

    # TODO rules
    "ANN401",  # Any in type annotations
    "BLE",     # Blind exceptions
    "DOC",     # Docstring rules (preview)
    "PLC0415", # Imports should be at the top.
]
unfixable = [
    "B028",    # People should intentionally tune the stacklevel
    "PLW1510", # People should intentionally set the check argument
]

flake8-annotations.allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true  # ignore missing documentation for *args and **kwargs parameters

[tool.ruff.lint.extend-per-file-ignores]
"tests/unit_tests/agents/*" = [
    "ANN", # Annotations, needs to fix
    "ARG", # Arguments, needs to fix
    "PT",  # pytest, needs to fix
]
"tests/unit_tests/agents/test_return_direct_spec.py" = ["F821"]
"tests/unit_tests/agents/test_responses_spec.py" = ["F821"]
"tests/unit_tests/agents/test_responses.py" = ["F821"]
"tests/unit_tests/agents/test_react_agent.py" = ["ALL"]

"tests/*" = [
    "D1",      # Documentation rules
    "S101",    # Tests need assertions
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "SLF001",  # Private member access in tests
    "PLR2004", # Magic values are perfectly fine in unit tests (e.g. 0, 1, 2, etc.)
]

"scripts/*" = [
    "INP", # Scripts are not in a package
]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5 --snapshot-warn-unused -vv"
markers = [
    "requires: mark tests as requiring a specific library",
    "scheduled: mark tests to run in scheduled testing",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::langchain_core._api.beta_decorator.LangChainBetaWarning",
    "ignore::langchain_core._api.deprecation.LangChainDeprecationWarning:tests",
    "ignore::langchain_core._api.deprecation.LangChainPendingDeprecationWarning:tests",
]
