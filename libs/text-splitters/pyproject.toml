[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
authors = []
license = { text = "MIT" }
requires-python = "<4.0,>=3.9"
dependencies = ["langchain-core<1.0.0,>=0.3.34"]
name = "langchain-text-splitters"
version = "0.3.6"
description = "LangChain text splitting utilities"
readme = "README.md"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/text-splitters"
"Release Notes" = "https://github.com/langchain-ai/langchain/releases?q=tag%3A%22langchain-text-splitters%3D%3D0%22&expanded=true"
repository = "https://github.com/langchain-ai/langchain"

[dependency-groups]
lint = ["ruff<1.0.0,>=0.9.2", "langchain-core"]
typing = [
    "mypy<2.0,>=1.10",
    "lxml-stubs<1.0.0,>=0.5.1",
    "types-requests<3.0.0.0,>=2.31.0.20240218",
    "tiktoken<1.0.0,>=0.8.0",
]
dev = ["jupyter<2.0.0,>=1.0.0", "langchain-core"]
test = [
    "pytest<9,>=8",
    "freezegun<2.0.0,>=1.2.2",
    "pytest-mock<4.0.0,>=3.10.0",
    "pytest-watcher<1.0.0,>=0.3.4",
    "pytest-asyncio<1.0.0,>=0.21.1",
    "pytest-socket<1.0.0,>=0.7.0",
    "pytest-xdist<4.0.0,>=3.6.1",
    "langchain-core",
]
test_integration = [
    "spacy<3.8.4,>=3.0.0; python_version < \"3.10.0\"",
    "spacy<4.0.0,>=3.0.0; python_version < \"3.13.0\"",
    "nltk<4.0.0,>=3.9.1",
    "transformers<5.0.0,>=4.47.0",
    "sentence-transformers>=2.6.0; python_version < \"3.13\"",
]

[tool.uv.sources]
langchain-core = { path = "../core", editable = true }

[tool.mypy]
disallow_untyped_defs = "True"
[[tool.mypy.overrides]]
module = [
    "transformers",
    "sentence_transformers",
    "nltk.tokenize",
    "konlpy.tag",
    "bs4",
    "pytest",
    "spacy",
    "spacy.lang.en",
    "numpy",
    "nltk",
    "spacy.cli",
    "torch",
]
ignore_missing_imports = "True"

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "T201", "D"]
ignore = ["D100"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [
    "requires: mark tests as requiring a specific library",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]
