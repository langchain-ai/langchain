[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "langchain-sarvam"
version = "0.0.1"
description = "An integration package connecting Sarvam AI and LangChain"
authors = []
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain"
license = "MIT"
packages = [{include = "langchain_sarvam"}]

[tool.poetry.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/sarvam"
"Release Notes" = "https://github.com/langchain-ai/langchain/releases?q=tag%3A%22langchain-sarvam%3D%3D0%22&expanded=true"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
langchain-core = ">=0.3.30,<0.4"
requests = "^2.31.0"
pydantic = ">=2.0,<3"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-benchmark = "^4.0.0"
langchain-tests = ">=0.3.2"
langchain-core = {path = "../../core", develop = true}

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.6"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.6.4"

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.typing.dependencies]
mypy = "^1.11.2"
types-requests = "^2.31.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
langchain-core = {path = "../../core", develop = true}

[tool.ruff]
extend = "../../ruff_defaults.toml"

[tool.ruff.lint]
select = [
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "T201", # print
]

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "tests/",
]
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
markers = [
  "requires: mark tests as requiring a specific library",
  "asyncio: mark tests as requiring asyncio",
  "compile: mark placeholder test used to compile integration tests without running them",
  "scheduled: mark tests to run in scheduled testing",
]
asyncio_mode = "auto"
