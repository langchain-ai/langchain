[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
authors = []
license = { text = "MIT" }
requires-python = ">=3.10.0,<4.0.0"
dependencies = [
    "ollama>=0.6.0,<1.0.0",
    "langchain-core>=1.0.0a7,<2.0.0",
]
name = "langchain-ollama"
version = "1.0.0a1"
description = "An integration package connecting Ollama and LangChain"
readme = "README.md"

[project.urls]
homepage = "https://docs.langchain.com/oss/python/integrations/providers/ollama"
repository = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/ollama"
changelog = "https://github.com/langchain-ai/langchain/releases?q=%22langchain-ollama%22"
docs = "https://reference.langchain.com/python/integrations/langchain_ollama/"
twitter = "https://x.com/LangChainAI"
slack = "https://www.langchain.com/join-community"
reddit = "https://www.reddit.com/r/LangChain/"

[dependency-groups]
test = [
    "pytest>=8.4.1,<9.0.0",
    "pytest-asyncio>=0.26.0,<1.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "pytest-watcher>=0.4.3,<1.0.0",
    "syrupy>=4.9.1,<5.0.0",
    "langchain-core",
    "langchain-tests",
]
test_integration = []
lint = ["ruff>=0.13.1,<0.14.0"]
dev = ["langchain-core"]
typing = [
    "mypy>=1.17.1,<2.0.0",
    "langchain-core"
]

[tool.uv.sources]
langchain-core = { path = "../../core", editable = true }
langchain-tests = { path = "../../standard-tests", editable = true }

[tool.mypy]
disallow_untyped_defs = "True"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Messes with the formatter
    "ISC001",  # Messes with the formatter
    "PERF203", # Rarely useful
    "S112",    # Rarely useful
    "RUF012",  # Doesn't play well with Pydantic
    "SLF001",  # Private member access
    "FIX002",  # TODOs
    "TD002",   # TODO authors
    "TD003",   # TODO missing url
    "TC002",   # Incorrect type-checking block
    "TC003",   # Incorrect type-checking block
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "C901",    # Function too complex
    "FBT001",  # Boolean function param
    "ERA001",  # Commented-out code

    # TODO
    "ANN401",
]
unfixable = ["B028"] # People should intentionally tune the stacklevel

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true  # ignore missing documentation for *args and **kwargs parameters

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"] # ignore docstring checks for tests

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
markers = [
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "S101",    # Tests need assertions
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "ARG001",  # Unused function arguments in tests (e.g. kwargs)
    "PLR2004", # Magic value in comparisons
    "PT011",   # `pytest.raises()` is too broad
]
"scripts/*.py" = [
    "INP001",   # Not a package
]
