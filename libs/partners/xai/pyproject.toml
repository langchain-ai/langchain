[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
authors = []
license = { text = "MIT" }
requires-python = ">=3.10.0,<4.0.0"
dependencies = [
    "langchain-openai>=1.0.0a3,<2.0.0",
    "langchain-core>=1.0.0a7,<2.0.0",
    "requests>=2.0.0,<3.0.0",
    "aiohttp>=3.9.1,<4.0.0",
]
name = "langchain-xai"
version = "1.0.0a1"
description = "An integration package connecting xAI and LangChain"
readme = "README.md"

[project.urls]
homepage = "https://docs.langchain.com/oss/python/integrations/providers/xai"
repository = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/xai"
changelog = "https://github.com/langchain-ai/langchain/releases?q=%22langchain-xai%22"
docs = "https://reference.langchain.com/python/integrations/langchain_xai/"
twitter = "https://x.com/LangChainAI"
slack = "https://www.langchain.com/join-community"
reddit = "https://www.reddit.com/r/LangChain/"

[dependency-groups]
test = [
    "pytest>=7.3.0,<8.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-watcher>=0.3.4,<1.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "docarray>=0.32.1,<1.0.0",
    "freezegun>=1.2.2,<2.0.0",
    "syrupy>=4.0.2,<5.0.0",
    "langchain-openai",
    "langchain-core",
    "langchain-tests",
]
test_integration = []
lint = ["ruff>=0.13.1,<0.14.0"]
typing = [
    "mypy>=1.10.0,<2.0.0",
    "types-requests>=2.0.0,<3.0.0",
    "langchain-core"
]
dev = ["langchain-core"]

[tool.uv.sources]
langchain-core = { path = "../../core", editable = true }
langchain-tests = { path = "../../standard-tests", editable = true }
langchain-openai = { path = "../openai", editable = true }

[tool.mypy]
disallow_untyped_defs = "True"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Messes with the formatter
    "ISC001",  # Messes with the formatter
    "PERF203", # Rarely useful
    "S112",    # Rarely useful
    "RUF012",  # Doesn't play well with Pydantic
    "SLF001",  # Private member access
    "FIX",     # TODOs
    "TD",      # TODOs
]
unfixable = ["B028"] # People should intentionally tune the stacklevel

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true  # ignore missing documentation for *args and **kwargs parameters

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "S101", # Tests need assertions
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes

    # TODO
    "PT011",
    "PLR2004",
]
"scripts/*.py" = [
    "INP001",   # Not a package
]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
