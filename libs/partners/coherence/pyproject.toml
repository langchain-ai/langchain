[project]
name = "langchain-coherence"
version = "0.0.1"
description = "LangChain integration for Oracle Coherence as a vector store."
authors = [{ name = "Your Name", email = "you@example.com" }]
license = { text = "MIT" }
readme = "README.md"
dependencies = [
    "langchain-core>=0.1.20",
    "coherence-client>=2.0.3"
]
requires-python = ">=3.9"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/coherence"
repository = "https://github.com/langchain-ai/langchain"

[dependency-groups]
lint = [
    "ruff<0.12.0,>=0.11.2",
]
typing = [
    "mypy<1.16,>=1.15",
]
test = [
    "pytest<9,>=8",
    "pytest-asyncio<1.0.0,>=0.21.1",
    "langchain_huggingface",
    "sentence_transformers"
]
test-integration = []
docs = [
    "jupytext>=1.16",
    "nbdoc>=0.0.29",
]
publish = [
    "build>=1.2.2",
    "twine>=5.1.1"
]

[tool.setuptools.packages.find]
where = ["langchain_coherence"]

[tool.mypy]
strict = true

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    "C90",     # McCabe complexity
    "COM812",  # Messes with formatter
    "FA100",   # Can't activate since UP007 excluded
    "FIX002",  # Line contains TODO
    "ISC001",  # Messes with formatter
    "PERF203", # Rarely useful
    "PLR09",   # Too many args/statements/etc.
    "RUF012",  # Pydantic dataclass issues
    "TD002",   # Missing author in TODO
    "TD003",   # Missing issue link in TODO
    "UP007",   # Doesn't work well with Pydantic
    "D417",    # Missing argument description in docstring
]

flake8-annotations.allow-star-arg-any = true
flake8-annotations.mypy-init-return = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D",       # All docstring-related rules
    "T201",    # print statements
    "S101",    # assert statements
    "E741",    # ambiguous variable names
    "PLR2004", # magic numbers
    "ERA001",  # commented-out code
    "ANN201",  # missing return type annotations
    "RET504",  # unnecessary assignment before return
    "TCH002"   # type-checking import suggestions
]
