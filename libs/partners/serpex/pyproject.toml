[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "langchain-serpex"
version = "0.1.0"
description = "An integration package connecting SERPEX and LangChain"
readme = "README.md"
license = {text = "MIT"}
authors = []
requires-python = ">=3.10.0,<4.0.0"
dependencies = [
    "langchain-core>=1.0.0,<2.0.0",
    "httpx>=0.27.0",
]

[project.urls]
Homepage = "https://docs.langchain.com/oss/python/integrations/providers/serpex"
Documentation = "https://serpex.dev/docs"
Source = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/serpex"
Repository = "https://github.com/langchain-ai/langchain"

[dependency-groups]
test = [
    "pytest>=7.3.0,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "langchain-core",
    "langchain-tests",
]
test_integration = []
lint = [
    "ruff>=0.13.1,<0.14.0",
]
typing = [
    "mypy>=1.10.0,<2.0.0",
    "types-requests>=2.31.0,<3.0.0",
    "langchain-core",
]
dev = ["langchain-core"]

[tool.uv.sources]
langchain-core = { path = "../../core", editable = true }
langchain-tests = { path = "../../standard-tests", editable = true }

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "F",  # Pyflakes
  "UP", # pyupgrade
  "B",  # flake8-bugbear
  "I",  # isort
]
ignore = [
  "UP006", # Use `list` instead of `List` for type annotations
  "UP007", # Use `X | Y` for type annotations
]

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [
  "requires: mark tests as requiring a specific library",
  "asyncio: mark tests as requiring asyncio",
  "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
