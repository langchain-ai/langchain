[project]
authors = []
license = { text = "MIT" }
requires-python = ">=3.9.0,<4.0.0"
dependencies = []
name = "langchain-monorepo"
version = "0.0.1"
description = "LangChain mono-repo"
readme = "README.md"

[project.urls]
repository = "https://www.github.com/langchain-ai/langchain"

[dependency-groups]
lint = ["ruff>=0.12.2,<0.13.0"]
dev = [
    "langchain-core",
    "langchain-text-splitters",
    "langchain-community",
    "langchain",
    "langchain-openai",
    "ipykernel>=6.29.2",
]
typing = []
test = [
    "langchain-experimental @ git+https://github.com/langchain-ai/langchain-experimental.git#subdirectory=libs/experimental",
    "langchain-anthropic",
    "langchain-aws @ git+https://github.com/langchain-ai/langchain-aws.git#subdirectory=libs/aws",
    "langchain-chroma",
    "langchain-fireworks",
    "langchain-google-vertexai @ git+https://github.com/langchain-ai/langchain-google.git#subdirectory=libs/vertexai",
    "langchain-google-genai @ git+https://github.com/langchain-ai/langchain-google.git#subdirectory=libs/genai",
    "langchain-groq",
    "langchain-mistralai",
    "langchain-tavily",
    "langchain-together @ git+https://github.com/langchain-ai/langchain-together.git#subdirectory=libs/together",
    "langchain-unstructured @ git+https://github.com/langchain-ai/langchain-unstructured.git#subdirectory=libs/unstructured",
    "langgraph",
    "msgpack",
    "jupyter>=1.1.1,<2.0.0",
    "click>=8.1.7,<9.0.0",
    "aiofiles>=24.1.0,<25.0.0",
    "faiss-cpu>=1.7.4,<2.0.0",
    "grandalf>=0.8.0,<1.0.0",
    "lark>=1.1.9,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "rank-bm25>=0.2.2,<1.0.0",
    "tabulate>=0.9.0,<1.0.0",
    "unstructured[md]>=0.16.11,<1.0.0; python_version < \"3.13\"",
    "wikipedia>=1.4.0,<2.0.0",
    "pypdf>=5.0.0,<6.0.0",
    "vcrpy>=6.0.1,<7.0.0",
    "linkchecker>=10.5.0,<11.0.0",
]
docs = [
    "toml>=0.10.2,<0.11.0",
    "types-toml>=0.10.8.20240310",
    "autodoc-pydantic>=2.0.0,<3.0.0",
    "sphinx>=6.0.0,<8.0.0",
    "myst-parser>=3.0.0,<4.0.0",
    "sphinx-autobuild>=2024",
    "pydata-sphinx-theme>=0.15.0",
    "myst-nb>=1.1.1",
    "pyyaml",
    "sphinx-design",
    "sphinx-copybutton",
    "beautifulsoup4",
    "sphinxcontrib-googleanalytics",
    "docutils>=0.21.2,<1.0.0",
    "types-docutils>=0.22.1.20250923",
]

[tool.uv.sources]
langchain-core = { path = "./libs/core", editable = true }
langchain-text-splitters = { path = "./libs/text-splitters", editable = true }
langchain-tests = { path = "./libs/standard-tests", editable = true }
langchain = { path = "./libs/langchain", editable = true }
langchain-openai = { path = "./libs/partners/openai", editable = true }
langchain-anthropic = { path = "./libs/partners/anthropic", editable = true }
langchain-chroma = { path = "./libs/partners/chroma", editable = true }
langchain-fireworks = { path = "./libs/partners/fireworks", editable = true }
langchain-groq = { path = "./libs/partners/groq", editable = true }
langchain-mistralai = { path = "./libs/partners/mistralai", editable = true }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["D"] # global select for pydocstyle
pydocstyle = { convention = "google" }

[tool.ruff.lint.per-file-ignores]
"**/{cookbook,docs}/*" = [
    "E402", # allow imports to appear anywhere in docs
    "F401", # allow "imported but unused" example code
    "F811", # allow re-importing the same module, so that cells can stay independent
    "F841", # allow assignments to variables that are never read -- it's example code

]
"!libs/langchain/langchain/model_laboratory.py" = ["D"]
